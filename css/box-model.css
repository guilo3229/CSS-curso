/* 
https://developer.mozilla.org/es/docs/Leran/CSS/Building_blocks/El_modelo_de_caja

Modelo de Caja: Es la forma en que CSS ve a los elementos HTML y ¿como los ve? como si fueran cajas con las siguientes propiedades:

1) El contenido(content): El contenido(texto del elemento HTML tomando en cuenta sus dimensiones(width & height)
2) El borde(border: Lo que delimita cada uno de los elementos HTML
3) El relleno(padding): Son las distancias internas(La distancia dle borde al contenido)
4) El márgen(margin) Son las distancias externas (La distancia entre el elemento html y sus elementos hermanos o padres)

Dentro del modela de caja hay que considerar que una caja tendrá 4 lados: 
  1. Arriba (top)
  2. Derecha (right)
  3. Abajo (bottom)
  4. Izquierda (left)
*/
/* 
body{
  margin: 0;
} */

h1{
  width: 400px;
  height: 200px;
  /* Propiedades de tipo shorthand */
  border-color: green;
  border-top-color: red;
  /* thin = 1px,medium = 3px,thick= 5px */
  border-width: thick;
  border-style:solid;
  /* Las 3 propeidades en una sola si generalizamos y no especificamos las partes */
  border: 2px dashed blue;
}



.caja-uno,
.caja-dos{
  background-color: chocolate;
  border: medium solid orange;
  /* Esto aplica para margin y padding
  1 valor = aplicar a los 4 lados
  2 valores = 
  primer valor es para lados vertivales top y bottom
  segundo valor espara los lados horizontales left y right
  3 valores=
  primer valor es para top 
  segundo valor seria para los lados horizontales es decir left y right
  tercer valor es para bottom
  4 valores= Piensa en las amnecillas del reloj
  primer valor es para top(12)
  segundo valor es para right (3)
  tercer valor es para bottom(6)
  cuarto valor es para left(9)*/
  
  
  
  padding: 20px;
  margin: 20px;
  padding: 20px 40px;
  margin: 40px 20px;
  padding: 0 40px 20px;
  margin: 50px 30px 0;
  padding: 0 40px 20px 50px;
  margin: 100px 50px 30px 0;
}

/* 
Caja de Línea
  -Ocupan el espacio necesario para mostrar su contenido.
  -No tienen dimensiones modificables(alto, ancho).
  -Permiten otros elementos a su lado.
  -Padding y margin solo empujan a elementos adyacentes en horizontal, NUNCA EN VERTICAL.

Caja de Bloque
  -Ocupan todo el ancho disponible, lo que genera saltos de línea
  -Tienen dimensiones modificables (alto,ancho).
  -No permiten otros elementos a su lado (aunque especifique un ancho, siguen ocupando todo el espacio disponible a lo ancho, generando saltos de lina)

*/

.caja-linea,
.caja-bloque{
  background-color: darkcyan;
  color: white;
  width: 500px;
  height: 200px;
  border: medium solid black;
  padding: 16px;

}

.caja-bloque{
  margin: 32px;
  display: block;
}
.caja-linea{
  margin: 48px;
  display: inline;
}

/* 
Propiedad Display

  inline
  block
  inline-block- Se comporta como un elemento def linea pero acepta modificar sus dimensiones(alto y ancho)
  none
  table
  list-item
  flex - ve mi curso de Flexbox
  grid - ve mi curso de Grid CSS
*/

.caja-none,
.caja-linea-bloque,
.caja-hidden{
  background-color: darkolivegreen;
  color: white;
  width: 600px;
  height: 300px;
  border: medium solid black;
}

.caja-linea-bloque{
  display: inline-block;
}

.caja-none{
  display: none;
}

/* PAra conservar el espacio aunque se oculta, es decir con visibility es qutiarle la visibilidad siempre que quieras conservar el espacio en blanco usar isibility con hidden y sino display:none */

.caja-hidden {
  visibility: hidden;
}

.overflow{
  background-color: darkturquoise;
  width: 200px;
  height: 100px;
  /* overflow: visible;
  overflow: scroll;
  overflow: auto; */
  overflow-y: scroll; 
  overflow-x: scroll;
}

/*
 Tamaño de Caja
 */

 .box-sizing-content,
 .box-sizing-border{
  background-color: deepskyblue;
  /* el box sizing: content-box significa que va a calcular las medidas desde el contenido */
  box-sizing: content-box;
  width: 500px;
  height: 250px;
  padding: 10px;
  border: thick solid black;
  /* w 500 +10+10+5+5=530
     h 250+10+10+5+5=280 */

 }
/* considera el tamaño de la caja desde el borde osea este va a ser el maximo  que puede tener e ira hacia dentro el contenido envede hacia fuera en contraposiciondel content-box que ira hacia afuera, hoy en dia si hace un reseteo para que todas las box tengan por defecto border-box  */
.box-sizing-border{
  box-sizing: border-box;
}

.container-col-3{
  background-color: burlywood;
  width: 606px;
  height: 300px;
  margin-top: 20px;
}

.container-col-3 > * {
  box-sizing: border-box;
  width: 200px;
  border: thin solid red;
  padding: 10px;
  float: left;
}

/* Noramlamente esto va al pinricipio de estilos paero por orden de aprendizaje lo ponemos aqui:
apply a natural box layout to all elements, but allowing components to change */

html{
  box-sizing:border-box;
}
*,
*:before, 
*:after {
  box-sizing: inherit;
}

/* Floats */

.container-floats{
  background-color: cornflowerblue;
  /* height: 200px; */
}

.float-left{
  float: left;
}
.float-right{
  float: right;
}

.clear-fix{
  clear:both
}

/* Colapso de margenes Verticales */

.margin-collapse{
  
  background-color: skyblue;
}
.margin-collapse section{
  border: thin solid black;
  margin-top:  16px;
  margin-bottom: 16px;
  
}
/* Los margenes horizontales no se colapsan los verticales si se colapsan !! */
.margin-collapse span{
  display: inline-block;
  margin-right: 16px;
  border: thin solid black;
  margin-left: 16px;
}

/* Centrado de cajas */

.sitio-web{
  border: thin solid black;
  background-color: thistle;
  width: 800px;
  height: 1000px;
  padding: 16px;
  /* text-align center centra ojo centra el contenido que tiene la caja dentro de la misma!! */
  text-align: center;
  /* PAra centrar la caja respecto a la ventana delnavegador */
  margin-top:200px;
  margin-left: auto;
  margin-right: auto;
  /* 1 valor para top y bottom y el segundo hacia la izquierda y derecha */
  /* margin: 0 auto pero el primer valor resetearia si tueviesemos algo fijo  o si tuviesemeos un margin top anterior; */
  /* margin:0 auto; mala practica exceptuando si lo tenemos muy claro cuidado con esta shorth hand */
}